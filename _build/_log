### Starting build.
# Target: test.ml.depends, tags: { package(ounit2), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules test.ml > test.ml.depends # cached
# Target: attack.mli.depends, tags: { package(ounit2), debug, extension:mli, file:attack.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules attack.mli > attack.mli.depends # cached
# Target: attack.cmi, tags: { package(ounit2), byte, compile, debug, extension:mli, file:attack.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o attack.cmi attack.mli # cached
# Target: camltypes.mli.depends, tags: { package(ounit2), debug, extension:mli, file:camltypes.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules camltypes.mli > camltypes.mli.depends # cached
# Target: camltypes.cmi, tags: { package(ounit2), byte, compile, debug, extension:mli, file:camltypes.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o camltypes.cmi camltypes.mli # cached
# Target: stages.mli.depends, tags: { package(ounit2), debug, extension:mli, file:stages.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules stages.mli > stages.mli.depends # cached
# Target: stages.cmi, tags: { package(ounit2), byte, compile, debug, extension:mli, file:stages.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o stages.cmi stages.mli # cached
# Target: test.cmo, tags: { package(ounit2), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o test.cmo test.ml # cached
# Target: attack.ml.depends, tags: { package(ounit2), debug, extension:ml, file:attack.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules attack.ml > attack.ml.depends
# Target: camltypes.ml.depends, tags: { package(ounit2), debug, extension:ml, file:camltypes.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules camltypes.ml > camltypes.ml.depends # cached
# Target: stages.ml.depends, tags: { package(ounit2), debug, extension:ml, file:stages.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -modules stages.ml > stages.ml.depends # cached
# Target: attack.cmo, tags: { package(ounit2), byte, compile, debug, extension:cmo, extension:ml, file:attack.cmo, file:attack.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o attack.cmo attack.ml
# Target: camltypes.cmo, tags: { package(ounit2), byte, compile, debug, extension:cmo, extension:ml, file:camltypes.cmo, file:camltypes.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o camltypes.cmo camltypes.ml
# Target: stages.cmo, tags: { package(ounit2), byte, compile, debug, extension:cmo, extension:ml, file:stages.cmo, file:stages.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -o stages.cmo stages.ml
# Target: test.byte, tags: { package(ounit2), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ounit2 camltypes.cmo stages.cmo attack.cmo test.cmo -o test.byte
# Compilation successful.
